---
apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: development
  labels:
    environment: development
    app.kubernetes.io/name: etcd
    app.kubernetes.io/instance: etcd-zeutcr
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: krake
spec:
  clusterIP: None
  ports:
  - port: 2379
    name: client
  - port: 2380
    name: peer
  selector:
    app.kubernetes.io/name: etcd
---
apiVersion: v1
kind: Service
metadata:
  name: etcd-client
  namespace: development
  labels:
    environment: development
    app.kubernetes.io/name: etcd
    app.kubernetes.io/instance: etcd-zeutcr
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: krake
spec:
  type: NodePort
  ports:
  - port: 2379
    protocol: TCP
    targetPort: 2379
  selector:
    app.kubernetes.io/name: etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: development
  labels:
    environment: development
    app.kubernetes.io/name: etcd
    app.kubernetes.io/instance: etcd-zeutcr
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: krake
spec:
  serviceName: etcd
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
  template:
    metadata:
      name: etcd
      labels:
        environment: development
        app.kubernetes.io/name: etcd
        app.kubernetes.io/instance: etcd-zeutcr
        app.kubernetes.io/version: "1.0.1"
        app.kubernetes.io/managed-by: kubectl
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: krake
    spec:
      containers:
      - name: etcd
        image: gcr.io/etcd-development/etcd:v3.5.12
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez?verbose=true
            port: 2379
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - name: data
          mountPath: /var/run/etcd
        env:
          - name: ETCD_QUOTA_BACKEND_BYTES
            value: "805306368"
          - name: ETCD_INITIAL_CLUSTER_TOKEN
            value: etcd-krake-database-zeutcr
          - name: ETCD_NAME
            valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          - name: ETCD_INITIAL_CLUSTER_STATE
            value: new
          - name: ETCD_INITIAL_CLUSTER
            value: etcd-0=http://etcd-0.etcd:2380,etcd-1=http://etcd-1.etcd:2380,etcd-2=http://etcd-2.etcd:2380
          - name: ETCD_LISTEN_CLIENT_URLS
            value: http://0.0.0.0:2379
          - name: ETCD_LISTEN_PEER_URLS
            value: http://0.0.0.0:2380
          - name: ETCD_ADVERTISE_CLIENT_URLS
            value: "http://$(ETCD_NAME).etcd:2379"
          - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
            value: "http://$(ETCD_NAME).etcd:2380"
          - name: ETCD_DATA_DIR
            value: /var/run/etcd/default
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: csi-sc-cinderplugin
      resources:
        requests:
          storage: 1Gi
