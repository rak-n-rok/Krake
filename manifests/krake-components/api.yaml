---
apiVersion: v1
kind: ConfigMap
metadata:
  name: krake-api
  namespace: development
data:
  api.yaml: |
    port: 8080
    etcd:
      host: etcd
      port: 2379
      retry_transactions: 1
    tls:
      enabled: False
      cert: ""
      key: ""
      client_ca: ""
    authentication:
      allow_anonymous: True
      strategy:
        keystone:
          enabled: False
          endpoint: http://localhost:5000/v3
        keycloak:
          enabled: False
          endpoint: http://localhost:9080/
          realm: krake
        static:
          enabled: True
          name: system:admin
    authorization: always-allow
    log:
      version: 1
      level: INFO
      disable_existing_loggers: false
      formatters:
        krake:
          format: "%(asctime)s - [%(name)s] - [%(levelname)-5s] - %(message)s"
      handlers:
        console:
          class: logging.StreamHandler
          formatter: krake
          stream: ext://sys.stdout
      root:
        handlers: [console]
      loggers:
        krake:
          handlers: [console]
          propagate: no
---
apiVersion: v1
kind: Service
metadata:
  name: krake-api
  namespace: development
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: krake-api
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: krake-api
  labels:
    app.kubernetes.io/name: krake-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: krake-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: krake-api
    spec:
      containers:
      - image: raknrok/krake
        name: krake-api
        command: ["python", "-m", "krake.api"]
        ports:
          - containerPort: 8080
            name: krake-api
        volumeMounts:
        - name: config-volume
          mountPath: /etc/krake
      volumes:
        - name: config-volume
          configMap:
            name: krake-api
