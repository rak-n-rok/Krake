# Dot-env jinja2 template stores environment variables which can be used for
# overwriting Krake base configuration settings.
# Dot-env jinja2 template can be used directly by corresponding Ansible playbook
# or can by processed by standalone jinja2 compiler as follows:
#
# .. code:: bash
#
#     cd docker/krake
#     pip install jinja2_standalone_compiler
#     vim jinja2_standalone_config  # Insert custom Krake variables (optional)
#     jinja2_standalone_compiler -s jinja2_standalone_config --path .env.j2
#

ETCD_HOST={{ etcd_host|default('krake-db') }}
ETCD_PORT={{ etcd_port|default('2379') }}
ETCD_PEER_PORT={{ etcd_peer_port|default('2380') }}

API_HOST={{ api_host|default('krake-api') }}
API_PORT={{ api_port|default('8080') }}

TLS_ENABLED={{ tls_enabled|default('false') }}
TLS_CERT={{ tls_cert|default('') }}
TLS_KEY={{ tls_key|default('') }}
TLS_CLIENT_CA={{ tls_client_ca|default('') }}

AUTHENTICATION_ALLOW_ANONYMOUS={{ authentication_allow_anonymous|default('true') }}
AUTHENTICATION_STRATEGY_KEYSTONE_ENABLED={{ authentication_strategy_keystone_enabled|default('false') }}
AUTHENTICATION_STRATEGY_KEYSTONE_ENDPOINT={{ authentication_strategy_keystone_endpoint|default('') }}
AUTHENTICATION_STRATEGY_STATIC_ENABLED={{ authentication_strategy_static_enabled|default('true') }}
AUTHENTICATION_STRATEGY_STATIC_NAME={{ authentication_strategy_static_name|default('system') }}

AUTHORIZATION={{ authorization|default('always-allow') }}

CONTROLLERS_KUBERNETES_CLUSTER_API_ENDPOINT=http://{{ api_host|default('krake-api') }}:{{ api_port|default('8080') }}
CONTROLLERS_KUBERNETES_CLUSTER_WORKER_COUNT={{ controllers_kubernetes_cluster_api_endpoint|default('5') }}
CONTROLLERS_KUBERNETES_APPLICATION_API_ENDPOINT=http://{{ api_host|default('krake-api') }}:{{ api_port|default('8080') }}
CONTROLLERS_KUBERNETES_APPLICATION_WORKER_COUNT={{ controllers_kubernetes_application_worker_count|default('5') }}
CONTROLLERS_SCHEDULER_API_ENDPOINT=http://{{ api_host|default('krake-api') }}:{{ api_port|default('8080') }}
CONTROLLERS_SCHEDULER_WORKER_COUNT={{ controllers_scheduler_worker_count|default('5') }}

LOG_LEVEL={{ log_level|default('INFO') }}
