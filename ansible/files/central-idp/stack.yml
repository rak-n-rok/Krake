heat_template_version: queens

description: >
  Provision Central Identity Provider (IdP) for Krake development environment

parameters:

  central_idp_secgroup:
    type: string
    default: krake-central-idp-secgroup
    description: Name of Central-IdP security group

  instance_name:
    type: string
    default: krake-central-idp
    description: Name of the Central-IdP instance

  key:
    type: string
    description: Name of the key pair for Central-IdP instance

  public_network:
    type: string
    description: >
      Name of public network for which floating IP addresses will be allocated

  network:
    type: string
    default: krake-network
    description: >
      Name of the private network Central-IdP instances

  subnet:
    type: string
    default: krake-subnet
    description: Name of the private subnetwork for Central-IdP instance

  common_secgroup:
    type: string
    default: krake-common-secgroup
    description: Name of common Krake security group

  git_branch:
    type: string
    description: Name of the git branch to clone on Central IdP
    default: master

  create_floating_ip:
    type: boolean
    default: true
    description: >
      Control whether to create a floating IP for the IdP instance or not

  flavor:
    type: string
    description: Name of the flavor to use for the Prometheus instance
    default: S

resources:

  instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: instance_name }
      flavor: { get_param: flavor }
      image: 35e19d60-2ebd-11e9-9c91-ebc42c7648d6 # Ubuntu 16.04 LTS x64
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data: { get_resource: cloud_init }
      user_data_format: RAW

  port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: subnet }
      security_groups:
        - default
        - { get_param: common_secgroup }
        - { get_resource: security_group }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { get_param: central_idp_secgroup }
      rules:
        - protocol: tcp
          port_range_min: 5001
          port_range_max: 5001

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network }
      port_id: { get_resource: port }
    condition:
      equals:
        - get_param: create_floating_ip
        - true

  cloud_init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: { get_file: cloud-init.sh }
          params:
            $GIT_BRANCH: { get_param: git_branch }

outputs:
  private_ip:
    description: IP address of central IdP instance in private network
    value: { get_attr: [instance, first_address] }

  public_ip:
    description: Floating IP address of central IdP instance
    value: { get_attr: [floating_ip, floating_ip_address] }
    condition:
      equals:
        - get_param: create_floating_ip
        - true
