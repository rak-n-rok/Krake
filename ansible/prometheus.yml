- name: Launch Prometheus
  hosts: prometheus
  gather_facts: false
  tasks:

    - name: Create Heat stack for Prometheus
      delegate_to: localhost
      os_stack:
        name: "{{ inventory_hostname }}"
        state: present
        template: "{{ playbook_dir }}/files/prometheus/stack.yml"
        parameters:
          instance_name: "{{ inventory_hostname }}"
          key: "{{ keypair }}"
          public_network: "{{  hostvars[network]['public_network'] }}"
          network: "{{ hostvars[network]['inventory_hostname'] }}"
          subnet: "{{ hostvars[network]['subnet_name'] }}"
          common_secgroup: "{{ hostvars[network]['common_secgroup_name'] }}"
          create_floating_ip: "{{ floating_ip }}"
          flavor: "{{ flavor }}"
          ports: "{{ ports | join(',') }}"
      register: stack

    - name: Update host variables of Prometheus
      vars:
        outputs: "{{ stack | stack_outputs }}"
        jump_host: "{{ hostvars[gateway].ansible_user }}@{{ hostvars[gateway].ansible_host }}"
        jump_key_file: "{{ hostvars[gateway].ansible_ssh_private_key_file or '~/.ssh/id_rsa' }}"
      update_host:
        hostname: "{{ inventory_hostname }}"
        ansible_host: "{{ outputs.private_ip }}"
        ansible_user: ubuntu
        ansible_ssh_common_args: '
          -o StrictHostKeyChecking=No
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand="ssh
              -o StrictHostKeyChecking=No
              -o UserKnownHostsFile=/dev/null
              {% if jump_key_file %} -i {{ jump_key_file }} {% endif %}
              -W %h:%p -q {{ jump_host }}"'
        ansible_ssh_private_key_file: "{{ key_file }}"
        ansible_python_interpreter: python3
        prometheus_admin_pass: "{{ prometheus_admin_pass }}"
        private_ip: "{{ outputs.private_ip }}"
        public_ip: "{{ outputs.public_ip | default(None) }}"

- name: Setup Prometheus
  become: yes
  # Run gather_facts (setup) manually to avoid a timing problem if the VM is
  # not booted yet
  gather_facts: false
  hosts: prometheus
  tasks:

    - name: Wait for Prometheus to show up
      wait_for_connection:
        timeout: 300

    - name: Gathering facts
      setup:

    # # Replace default mirror with a faster one
    # - name: Copy sources.list
    #   copy:
    #     src: "{{ playbook_dir }}/files/krake/sources.list"
    #     dest: /etc/apt/sources.list

    - name: Install system packages
      apt:
        update_cache: yes
        state: present
        name: "{{ packages }}"
      vars:
        packages:
          - docker.io
          - jq
          - haveged
          - python3-pip

    - name: Install Python packages  # Required for docker_service module
      pip:
        name: "{{ packages }}"
      vars:
        packages:
          - docker
          - docker-compose

    # Ansible best practice for maintaining passwordless sudo access
    - name: Create 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow members of 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Create user 'prometheus'
      user:
        name: prometheus
        append: yes
        groups:
          - docker
          - wheel # used for sudo
        create_home: yes
        state: present
        shell: /bin/bash
        home: /home/prometheus

    - name: Create a hushlogin for user prometheus
      become_user: prometheus
      copy:
        content: ""
        dest: /home/prometheus/.hushlogin
        force: no

      # TODO: Remove once issue is resolved
      #   C&H infra currently suffers from "MTU bug" when typical value of 1500 causes connectivity
      #   issues. Following is a workaround.
    - name: Create workaround in Docker for C&H's MTU issues
      copy:
        dest: "/etc/docker.json"
        content: '{ "mtu" : 1450 }'

    - name: Restart docker to reload the configuration
      systemd:
        name: docker
        state: restarted

    - name: Add hostname to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 {{ hostname }}"

    - name: Set the machine's hostname
      copy:
        dest: "/etc/hostname"
        content: "{{ hostname }}"

    - name: Create .ssh directory
      file:
        path: /home/prometheus/.ssh
        state: directory
        mode: 0770
        owner: prometheus
        group: prometheus

    - name: Copy 'authorized_keys' from user 'ubuntu' to user 'prometheus'
      copy:
        remote_src: yes
        src: /home/ubuntu/.ssh/authorized_keys
        dest: /home/prometheus/.ssh/authorized_keys
        owner: prometheus
        mode: 0600

- name: Manage Prometheus
  become_user: prometheus
  become: yes
  hosts: prometheus
  tags:
    - manage
  roles:
    - authorized-keys
  vars:
    git_dir: /home/prometheus/git/prometheus
    repo_dir: "{{ playbook_dir }}/.."
    authorized_user: prometheus

    # FIXME: The following variables are copied from
    #   "infra/prometheus/cloud-init/prometheus_vm-template_settings.py".
    #   There should be only one place for this configuration.
    uwsgi_processes: 1
    # TODO: Should be removed if trusted CA certificate takes place.
    #   This will be done in: https://publicgitlab.cloudandheat.com/ragnarok/krake/issues/168
    prometheus_skip_verify: True
  tasks:

    - name: Create git sub-directory
      become_user: root
      file:
        path: "{{ git_dir }}"
        state: directory
        owner: prometheus
        group: prometheus

    # TODO: Refactor into an Ansible role because this workflow is used by
    #   several playbooks already (see Krake VM).
    - name: Synchronize local and remote repository
      tags:
        - synchronize
      vars:
        src: "{{ repo_dir }}"
        exclude_file: "{{ playbook_dir }}/files/krake/rsync.exclude"
        dest: "{{ git_dir }}"
      block:

        # rsync is executed on the localhost
        - name: Copy files with rsync
          synchronize:
            dirs: true
            checksum: true
            perms: true
            rsync_opts:
              - --itemize-changes
              - "--exclude-from={{ exclude_file }}"
            src: "{{ src }}"
            dest: "{{ dest }}"
            delete: yes
            use_ssh_args: true

        # FIXME: rsync does not honour become_user. This needs to be
        #   parametrized for the Ansible role.
        - name: Set correct permissions
          become_user: root
          file:
            recurse: true
            path: "{{ dest }}"
            state: directory
            owner: prometheus
            group: prometheus

    - name: Generate Prometheus configuration
      template:
        src: "{{ repo_dir}}/infra/prometheus/docker-compose/prometheus/prometheus.yml.j2"
        dest: "{{ git_dir }}/infra/prometheus/docker-compose/prometheus/prometheus.yml"
        owner: prometheus
        group: prometheus

    - name: Start Prometheus containers
      tags:
        - docker
      docker_service:
        state: present
        restarted: true
        build: yes
        project_src: "{{ git_dir }}/infra/prometheus/docker-compose/"
      environment:
        PROMETHEUS_ADMIN_PASS: "{{ prometheus_admin_pass }}"
        GRAFANA_ADMIN_PASS: "{{ grafana_admin_pass }}"
