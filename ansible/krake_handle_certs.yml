- name: Generate cluster config
  become: yes
  become_user: krake
  hosts: krake_apps
  module_defaults:
    ansible.builtin.setup:
      gather_timeout: 60
  vars:
    - krake_homedir: /home/krake
    - cert_dir: "{{ krake_homedir }}/clusters/certs/"
  tags:
    - cluster_certs
  tasks:

    - name: Generate minikube cluster config
      block:

      - name: Create directory to host clusters infos
        file:
          path: "{{ krake_homedir }}/clusters/config"
          state: directory

      - name: Upload certificates directory
        copy:
          src: cluster_certs/
          dest: "{{ cert_dir }}"
          mode: preserve

      - name: Generate kube config file
        template:
          src: files/krake/kube_config.j2
          dest: "{{ krake_homedir }}/clusters/config/{{ item }}"
        vars:
          cluster_name: "{{ item }}"
          cluster_ip: "{{ hostvars[item]['private_ip'] }}"
          cluster_api_port: "{{ hostvars[item]['api_port'] }}"
        with_items: "{{ groups['minikube_clusters'] }}"

      when: groups['minikube_clusters'] is defined

    - name: Generate k3s cluster config
      block:

      - name: Create directory to host clusters infos
        file:
          path: "{{ krake_homedir }}/clusters/config"
          state: directory

      - name: Upload certificates directory
        copy:
          src: cluster_certs/
          dest: "{{ cert_dir }}"
          mode: preserve

      - name: Generate kube config file
        template:
          src: files/krake/kube_k3s_config.j2
          dest: "{{ krake_homedir }}/clusters/config/{{ item }}"
        vars:
          cluster_name: "{{ item }}"
          cluster_ip: "{{ hostvars[item]['private_ip'] }}"
          cluster_api_port: "{{ hostvars[item]['api_port'] }}"
        with_items: "{{ groups['k3s_clusters'] }}"

      when: groups['k3s_clusters'] is defined

    - name: Generate k3s cluster config
      block:

      - name: Create directory to host clusters infos
        file:
          path: "{{ krake_homedir }}/clusters/config"
          state: directory

      - name: Upload certificates directory
        copy:
          src: cluster_certs/
          dest: "{{ cert_dir }}"
          mode: preserve

      - name: Generate kube config file
        template:
          src: files/krake/kube_k3s_config.j2
          dest: "{{ krake_homedir }}/clusters/config/{{ item }}"
        vars:
          cluster_name: "{{ item }}"
          cluster_ip: "{{ hostvars[item]['private_ip'] }}"
          cluster_api_port: "{{ hostvars[item]['api_port'] }}"
        with_items: "{{ groups['k3s_clusters'] }}"

      when: groups['k3s_clusters'] is defined

    - name: Generate microk8s cluster config
      block:

      - name: Create directory to host clusters infos
        file:
          path: "{{ krake_homedir }}/clusters/config"
          state: directory

      - name: Upload certificates directory
        copy:
          src: cluster_certs/
          dest: "{{ cert_dir }}"
          mode: preserve

      - name: Generate kube config file
        template:
          src: "cluster_certs/{{ item }}/mk8s_config.j2"
          dest: "{{ krake_homedir }}/clusters/config/{{ item }}"
        with_items: "{{ groups['microk8s_clusters'] }}"

      when: groups['microk8s_clusters'] is defined
