# Playbook for creating OpenVPN client configurations for every Krake private
# network gateway instance (see "gateways" host group in inventory).
#
# The different OpenVPN configurations are stored inside the "ansible/.openvpn"
# directory. Each gateway host gets a separate directory matching its Ansible
# inventory name.
- name: Generate OpenVPN client configurations
  hosts: gateways
  tasks:

    - name: Fetch local hostname
      local_action: command hostname
      register: hostname_out

    - name: Register local hostname and local configuration directory
      set_fact:
        hostname: "{{ hostname_out.stdout }}"
        confdir: "{{ etc_dir }}/openvpn/{{ inventory_hostname }}"

    - name: Create local configuration directory directory
      delegate_to: localhost
      file:
        dest: "{{ confdir }}"
        state: directory

    - name: Create OpenVPN client configuration
      delegate_to: localhost
      vars:
        gateway_ip: "{{ ansible_host }}"
      template:
        src: "{{ playbook_dir }}/files/gateway/client.conf.j2"
        dest: "{{ confdir }}/client.conf"

    - name: Copy OpenSSL CA certificate
      fetch:
        src: /etc/openvpn/server/krake/ca.crt
        dest: "{{ confdir }}/ca.crt"
        flat: true

    - name: Generate OpenSSL private key for client certificate
      delegate_to: localhost
      openssl_privatekey:
        path: "{{ confdir }}/{{ hostname }}.key"

    - name: Generate OpenSSL client certificate signing request (CSR)
      delegate_to: localhost
      openssl_csr:
        path: "{{ confdir }}/{{ hostname }}.csr"
        privatekey_path: "{{ confdir }}/{{ hostname }}.key"
        common_name: "{{ hostname }}"
        subject:
          C: DE
          ST: Saxony
          L: Dresden
          O: CLOUD&HEAT Technology GmbH
          CN: "{{ hostname }}"
        basic_constraints:
          - CA:false
        key_usage:
          - digitalSignature
          - keyEncipherment
        extended_key_usage:
          - clientAuth

    - name: Sign OpenSSL server certificate
      block:

        - name: Copy client OpenSSL CSR to gateway
          copy:
            src: "{{ confdir }}/{{ hostname }}.csr"
            dest: "/tmp/{{ hostname }}.csr"

        - name: Sign OpenSSL client certificate
          become: true
          openssl_certificate:
            path: "/tmp/{{ hostname }}.crt"
            csr_path: "/tmp/{{ hostname }}.csr"
            ownca_path: /etc/openvpn/server/krake/ca.crt
            ownca_privatekey_path: /etc/openvpn/server/krake/ca.key
            provider: ownca

        - name: Copy OpenSSL client certificate from gateway
          fetch:
            src: "/tmp/{{ hostname }}.crt"
            dest: "{{ confdir }}/{{ hostname }}.crt"
            flat: true

      always:

        - name: Delete OpenSSL client CSR from gateway
          file:
            path: "/tmp/{{ hostname }}.csr"
            state: absent

        - name: Delete OpenSSL client certificate from gateway
          become: true
          file:
            path: "/tmp/{{ hostname }}.crt"
            state: absent

# This play assumes an Debian-based system using systemd, e.g. Ubuntu 18.04.
# Furthermore, it requires root privileges on localhost. Either, Ansible is
# executed as root or the "--ask-become-pass" "-K" is added to the playbook
# command:
#
#   $ ansible-playbook -i hosts.yml playbooks/openvpn_client.yml -K
#
- name: Configure OpenVPN on local machine
  hosts: gateways
  become: true
  gather_facts: false
  tags:
    - configure
  tasks:

    - name: Install OpenVPN apt package
      delegate_to: localhost
      vars:
        # We set the interpreter to the standard Python interpreter on the
        # system. Otherwise, the "apt" module complains about a missing
        # "apt_pkg" Python package.
        #
        # @see https://github.com/ansible/ansible/issues/14468
        ansible_python_interpreter: /usr/bin/python
      apt:
        state: present
        name: openvpn

    - name: Create 'openvpn' group
      delegate_to: localhost
      group:
        name: openvpn
        system: true
        state: present

    - name: Create user 'openvpn'
      delegate_to: localhost
      user:
        name: openvpn
        group: openvpn
        create_home: false
        system: true
        shell: /bin/bash
        state: present

    - name: Copy OpenVPN client configuration
      delegate_to: localhost
      command: "cp -r {{ etc_dir }}/openvpn/{{ inventory_hostname }} /etc/openvpn/client/"

    - name: Create symbolic for OpenVPN client configuration
      delegate_to: localhost
      file:
        src: "{{ inventory_hostname }}/client.conf"
        dest: "/etc/openvpn/client/{{ inventory_hostname }}.conf"
        state: link

    - name: Start OpenVPN client service
      delegate_to: localhost
      systemd:
        name: "openvpn-client@{{ inventory_hostname }}"
        state: restarted
