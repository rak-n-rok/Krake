async def test_create_{{ operation.signature_name }}(aiohttp_server, config, db, loop):
    # MISSING Resource-specific elements can be set here
    data = {{ operation.body.__name__ }}Factory()
    {% if not operation.resource.namespaced -%}
    # FIXME: to remove when the changes in the core factories introduced by !397 are
    #  merged
    assert data.metadata.namespace is not None
    data.metadata.namespace = None
    {%- endif %}

    server = await aiohttp_server(create_app(config=config))

    async with Client(url=f"http://{server.host}:{server.port}", loop=loop) as client:
        {{ operation.resource.api }}_api = {{ operation.resource.api|title }}Api(client)
        received = await {{ operation.resource.api }}_api.create_{{ operation.signature_name }}(
            {{ namespace_metadata(operation) }}body=data
        )

    assert received.api == "{{ operation.resource.api }}"
    assert received.kind == "{{ operation.response.__name__ }}"
    assert received.metadata.name == data.metadata.name
    assert received.metadata.namespace {{ '== "testing"' if operation.resource.namespaced else "is None" }}
    assert received.metadata.created
    assert received.metadata.modified

    # MISSING The resource-specific attributes can be verified here.
    # assert received.spec == data.spec

    stored = await db.get(
        {{ operation.response.__name__ }}, {{ namespace_metadata(operation) }}name=data.metadata.name
    )
    assert stored == received
