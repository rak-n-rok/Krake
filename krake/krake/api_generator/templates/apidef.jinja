from {{ api_def.module_path }} import (
{%- for cls_name in api_def.import_classes %}
    {{ cls_name }},
{%- endfor %}
)
from .definitions import ApiDef, Scope, operation, subresource, ListQuery


{{ api_def.name }} = ApiDef("{{ api_def.name }}")


{% for res_def in api_def.resources -%}
@{{ api_def.name }}.resource
class {{ res_def.name }}:
    singular = "{{ res_def.singular }}"
    plural = "{{ res_def.plural }}"
    scope = {{ res_def.scope }}

    @operation
    class Create:
        method = "POST"
        path = "{{ res_def.url_path }}"
        body = {{ res_def.singular }}
        response = {{ res_def.singular }}

    @operation
    class Read:
        method = "GET"
        path = "{{ res_def.url_path }}/{name}"
        response = {{ res_def.singular }}

    @operation
    class List(ListQuery):
        number = "plural"
        method = "GET"
        path = "{{ res_def.url_path }}"
        response = {{ res_def.res_list_name }}

    {% if res_def.namespaced -%}
    @operation
    class ListAll(ListQuery):
        number = "plural"
        method = "GET"
        path = "/{{ api_def.name }}/{{ res_def.plural|lower }}"
        response = {{ res_def.res_list_name }}

    {% endif -%}
    @operation
    class Update:
        method = "PUT"
        path = "{{ res_def.url_path }}/{name}"
        body = {{ res_def.singular }}
        response = {{ res_def.singular }}

    @operation
    class Delete:
        method = "DELETE"
        path = "{{ res_def.url_path }}/{name}"
        response = {{ res_def.singular }}

    {% for subres in res_def.subresources -%}
    @subresource
    class {{ subres|title }}:
        @operation
        class Update:
            method = "PUT"
            path = "{{ res_def.url_path }}/{name}/{{ subres|lower }}"
            body = {{ res_def.singular }}
            response = {{ res_def.singular }}

    {% endfor %}
{% endfor -%}
