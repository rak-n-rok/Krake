async def test_read_{{ operation.signature_name }}(aiohttp_client, config, db):
    data = {{ operation.response.__name__ }}Factory()
    await db.put(data)

    client = await aiohttp_client(create_app(config=config))
    resp = await client.get(
        f"{{ operation.path.format(namespace="testing", name="{data.metadata.name}") }}"
    )
    assert resp.status == 200
    received = {{ operation.response.__name__ }}.deserialize(await resp.json())
    assert received == data


async def test_read_{{ operation.signature_name }}_rbac(rbac_allow, config, aiohttp_client):
    config.authorization = "RBAC"
    client = await aiohttp_client(create_app(config))

    resp = await client.get(
        "{{ operation.path.format(namespace="testing", name="my-resource") }}"
    )
    assert resp.status == 403

    async with rbac_allow(
        "{{ operation.resource.api }}",
        "{{ operation.resource.plural|lower }}",
        "get"{{ namespace_none(operation) }}
    ):
        resp = await client.get(
            "{{ operation.path.format(namespace="testing", name="my-resource") }}"
        )
        assert resp.status == 404
